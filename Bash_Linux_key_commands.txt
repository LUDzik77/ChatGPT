ls costam*                      WYSWIETLA DOPASOWANE DO WZORCA   /przydatne np :  ls *.py     
ls |grep poczatek*              WYŚWIETLA WSZYSTKO Z WZORCEM początek*
ls -l                           WYŚWIETLA PRAWA DOSTĘPU / wlasciciel/ grupa/ kilobajty / czas edycji / nazwa
cd <napisz kawałek> + TAB       AUTOUZUPEŁNIENIE
mkir test                       TWORZY FODLER
rm test                         USUWA TYLKO JESLI PUSTY
rm test -rf                     RECURSYWNIE FORCE - USUWA WSZYSTKO
touch test.txt                  TWORZY PLIK
cat test.txt                    PODGLĄDA ZAWARTOŚĆ
less   test.txt                 ...Z KURSOREM - wychodzimy za pomocą Q
wc -l test.txt                  LICZY LINIE  -W   LICZY SLOWA 
--help                          UŻYWAĆ :)
control +l    = CLEAR
find -iname '*test*'                           SZUKA REKURSYWNIE (W SUBFOLDERACH)
find -iname '*test*' | wc -l                   ...I DODAJE LICZBĘ LINII
find -iname '*test*' | wc -l >../lista.txt     ...I ZAPISUJE W PLIKU  
find ./ -name "*.txt" | xargs grep test        SZUKA PLIKÓW TXT REKURSYWNIE I SZUKA W NICH LINII Z "test"
find -name 'lista.txt."       TO JAK PRZENOSIMY PLIK 1
dostajemy <tu adres listy>    TO JAK PRZENOSIMY PLIK 2
mv <tu adres listy> .         TO JAK PRZENOSIMY PLIK 3 (mv <co>  <gdzie>)
chmod -rw skrypt.sh           DODANIE DO PERMISSIONS exekucji 
gzip lista.txt                ZIPOWANIE
funzip lista.txt.gz           UNZIPOWANIE
tar -czpf ./paczka.tar.gz ./  SKLEJ i ZAPISZ
(-CREATE+ZIP+UWZGLĘNIJ PRAWA DOSTĘPU+ZAPISZ JAKO PACZKA.TAR.GZ I ZAPISZ W BIEŻĄCYM FOLDERZE)
tar -ztf paczka.tar.gz        PRZEGLĄDAJ TARA
tar -ztf paczka.tar.gz|less   PRZEGLĄDAJ TARA z KURSOREM
tar -zxf paczka.tar.gz        ROZPAKUJ
grep -E '\.py$' TesTt.txt     WYSZUKAJ  nazwy kończączące sie na .py  w pliku
grep -E '^T+T$' TesTt.txt     WYSZUKAJ  nazwy zaczynające się i kończące na T
ls|grep test                  WYSZUKAJ TO CO MA TEST W NAZWIE
ls|grep -vi test              WYSZUKAJ TO CO NIE MA TEST W NAZWIE + NOT CASE SENSITIVE
ls|sort -r                    WYLISTUJ OD Z
ls|grep -vi test |sort -r     WYLISTUJ OD Z BEZ "TEST" + NOT CASE SENSITIVE\
pwd					PRINT WORKING DIRECTORY
cd /					PRZENOSI DO ROOT DIRECTORY
cp test.txt ./TEST2/copytest.txt      KOPIUJE PLIK POD NAZWĄ copytest.txt w TEST2
man					WYŚWIETLA MANUAL (nie zawsze działa; ;lepiej <command> --help
nano test.txt                 OTWIERA EDYTOR GNU. shift+ctr+x = WYJŚCIE
echo "newcontent" >test.txt   NADPISUJE ZAWARTOŚĆ PLIKU
./skrypt.sh				URUCHOM skrypt.sh
history | grep test		WYŚWIETLA HISTORIĘ POLECEŃ ze słowem "test"
head -n 5 test.txt            WYŚWIETLA 5 PIERWSZYCH LINII
tail -n 5 test.txt		WYŚWIETLA 5 OSTATNICH LINII
cp -r ROZPAKOWANE TEST2		SKOPIUJ FOLDER ROZPAKOWANE DO FOLDERU TEST2

CTR + SHIFT + C       CTR + SHIFT + V      kopiowanie i wklejanie w Linuxie /zazwyczaj/

//////////////////repetition

ls <dir>  --> lists without moving from directory
ls -all   --> show list the dir with previlages
cd ..     --> move one level top
/         --> root directory
mkdir  NAMEfolder/newfolder/nextfolder -p    --->let us create the directories in the provided path
mv tesfile testfile.txt     ---> renaming
tail copied.txt -f          ---> show new lines in real time (to view logs)
date >> copied.txt          ---> append file with a current date
ls -l >> tableofcontent.txt ---> creates dir table of content
ls -l | wc                  ---> count words/characters/bytes of directory file
cat file1 file2 | sort      ---> sorts lines form 2 files
sort file1 | uniq           ---> sort unique files
sort fruit.txt | uniq -c    ---> ...and count the occurance
sort fruit.txt | uniq -c | sort -nr   ---> ... and sort by numbers
echo *.txt                  ---> show all txt files
echo ????                   ---> show all 4-long resources
touch Day{1..365}.txt       ---> creates a file for each day in the year
diff -u file1original file1changed    ---> GIT-style file changes comparison
find . -type d	-name 'text*'		  ---> gives all the directories
find . -type f -size -1k              ---> returns small (empty) files
grep -R app							  ---> find all the line with "app" in direcory (inside of the files or in names)
how to use history: memorise index nr of the command you are interested.  ie:
history | grep 'cookie'
!nrofcommand                ----> run the command under the number
ps ax                       ----> show all the processes (all the users)
gzip -k filename			----> zip a file using gzip algo and KEEP the original file
tar -cf myTARfile.tar file.txt file2.txt                   ---> create archieve of files
tar -cf myTARfileTEST copied.txt copied2.txt | gzip -f     ---> same, but zipped
alias mytest='mkdir Folder1 Folder2'                       ---> create a shortcut to command
